@Library('multicloud') _

pipeline {
    agent any
  //  tools {
  //     jdk 'jdk-17'
  //     maven 'maven'
  //  }
  
    environment {
        IMAGE_NAME = "ahmedmoo/gradle-app"
        DOCKERHUB_CREDENTIALS = "DockerHub"
        OPENSHIFT_PROJECT = "ahmedmostafa"
        OPENSHIFT_CREDENTIALS = "OC"
        CLUSTER_URL = "https://api.ocp-training.ivolve-test.com:6443"
        SCANNER_HOME  = tool 'sonar-scanner'
    }

    stages {

        stage('Unit Test') {
            steps {
                script {               	
                    test()
            	}
    	    }
        }


        stage('Run sonarQube') {
            steps {
                script { 
                    sonar-qube()
            	}
    	    }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def fullImageName = "${IMAGE_NAME}:${env.BUILD_NUMBER}"
                    build_docker_image(fullImageName)
                }
            }
        }


        stage('push to dockerhub') {
            steps {
                script {   
                    push_docker_image("${IMAGE_NAME}:${env.BUILD_NUMBER}" ,"${DOCKERHUB_CREDENTIALS}")
            	}
    	    }
        }


        stage('deploy to openshift') {
            steps {
                script {   
                    openshift(OPENSHIFT_CREDENTIALS , OPENSHIFT_PROJECT , CLUSTER_URL )
                }
    	    }
        }
        
       
}
    post {
        always {
            echo "Pipeline completed."
            cleanWs() // Clean workspace after the build is finished
        }
        success {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline succeeded"
        }
        failure {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline failed"
        }
    }
}
